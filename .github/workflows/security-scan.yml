name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd api
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety

    - name: Run Safety scan
      run: |
        cd api
        safety check --json --output safety-report.json || true
        safety check --short-report

    - name: Run npm audit (Mobile)
      run: |
        cd expo/ppal
        npm audit --audit-level=moderate --json > npm-audit.json || true
        npm audit --audit-level=moderate

    - name: Upload safety report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          api/safety-report.json
          expo/ppal/npm-audit.json

  code-security-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        pip install bandit semgrep
        npm install -g @microsoft/eslint-plugin-sdl

    - name: Run Bandit (Python security)
      run: |
        cd api
        bandit -r . -x tests/ -f json -o bandit-report.json || true
        bandit -r . -x tests/ -ll

    - name: Run Semgrep
      run: |
        semgrep --config=auto --json --output=semgrep-report.json . || true
        semgrep --config=auto .

    - name: Upload security scan reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: code-security-reports
        path: |
          api/bandit-report.json
          semgrep-report.json

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        cd api
        docker build -t pantrypal-api:latest .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'pantrypal-api:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  infrastructure-scan:
    name: Infrastructure Security Scan  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Checkov on CloudFormation
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: api/
        framework: cloudformation
        output_format: sarif
        output_file_path: checkov-report.sarif

    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: checkov-report.sarif

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, secrets-scan]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "" >> security-summary.md
        echo "## Scan Results" >> security-summary.md
        echo "" >> security-summary.md
        
        # Check if any critical issues found
        if [ -f "security-reports/safety-report.json" ]; then
          echo "### Python Dependencies" >> security-summary.md
          python3 -c "
        import json
        try:
            with open('security-reports/safety-report.json', 'r') as f:
                data = json.load(f)
                vulnerabilities = data.get('vulnerabilities', [])
                if vulnerabilities:
                    print(f'❌ {len(vulnerabilities)} vulnerabilities found')
                else:
                    print('✅ No vulnerabilities found')
        except:
            print('⚠️ Could not parse safety report')
        " >> security-summary.md
        fi
        
        if [ -f "code-security-reports/bandit-report.json" ]; then
          echo "### Code Security (Bandit)" >> security-summary.md
          python3 -c "
        import json
        try:
            with open('code-security-reports/bandit-report.json', 'r') as f:
                data = json.load(f)
                results = data.get('results', [])
                high = len([r for r in results if r.get('issue_severity') == 'HIGH'])
                medium = len([r for r in results if r.get('issue_severity') == 'MEDIUM'])
                if high > 0:
                    print(f'❌ {high} high severity issues found')
                elif medium > 0:
                    print(f'⚠️ {medium} medium severity issues found')
                else:
                    print('✅ No security issues found')
        except:
            print('⚠️ Could not parse bandit report')
        " >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "Detailed reports are available in the job artifacts." >> security-summary.md
        
        cat security-summary.md
    
    - name: Upload security summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md